# Generated by Django 4.0.4 on 2022-07-13 13:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import test_plt.models


class Migration(migrations.Migration):

    replaces = [('test_plt', '0001_initial'), ('test_plt', '0002_auto_20211121_1808'), ('test_plt', '0003_projectmember'), ('test_plt', '0004_alter_projectmember_quit_date'), ('test_plt', '0005_auto_20211124_2115'), ('test_plt', '0006_alter_project_created_by'), ('test_plt', '0007_apidef_requestheader_requestbody_queryparam'), ('test_plt', '0008_apirunlog'), ('test_plt', '0009_case_caseapidef_casesuite_alter_apirunlog_options_and_more'), ('test_plt', '0010_alter_apirunlog_table_alter_caseapidef_table_and_more'), ('test_plt', '0011_alter_caseapidef_case'), ('test_plt', '0012_rename_parm_value_caseapidefqueryparam_param_value_and_more'), ('test_plt', '0013_apidef_db_name_apidef_db_password_apidef_db_username_and_more'), ('test_plt', '0014_apirunlog_redis_key'), ('test_plt', '0015_caseapidef_redis_key'), ('test_plt', '0016_caseapidef_post_proc_caseapidef_pre_proc'), ('test_plt', '0017_testbatch_testbatchcasesuite_testbatchcase_and_more'), ('test_plt', '0018_alter_caserunlog_test_batch'), ('test_plt', '0019_alter_apirunlog_case_run_log_and_more')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_celery_beat', '0016_alter_crontabschedule_timezone'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='测试项目名称')),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='创建时间')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='项目描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('type', models.IntegerField(choices=[(1, 'web'), (2, 'App'), (3, '微服务')], default=1, verbose_name='产品类型')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最近更新时间')),
                ('version', models.CharField(default='0.1.1', max_length=20, verbose_name='版本')),
            ],
            options={
                'verbose_name': '测试项目',
                'verbose_name_plural': '测试项目',
            },
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('join_date', models.DateTimeField(verbose_name='加入日期')),
                ('role', models.IntegerField(choices=[(1, '测试人'), (2, '测试组长'), (3, '测试经理'), (4, '开发'), (5, '运维'), (6, '项目经理')], verbose_name='角色')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('quit_date', models.DateTimeField(blank=True, null=True, verbose_name='退出日期')),
                ('memo', models.CharField(blank=True, max_length=200, null=True, verbose_name='备忘录')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.project', verbose_name='测试项目')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '项目成员',
                'verbose_name_plural': '项目成员',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(related_name='project_members', through='test_plt.ProjectMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DeployEnv',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='环境名称')),
                ('hostname', models.CharField(help_text='主机名（IP）', max_length=50, verbose_name='主机名')),
                ('port', models.IntegerField(verbose_name='端口')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('memo', models.CharField(blank=True, max_length=200, null=True, verbose_name='备忘录')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.project', verbose_name='测试项目')),
            ],
            options={
                'verbose_name': '部署环境',
                'verbose_name_plural': '部署环境',
            },
        ),
        migrations.AlterField(
            model_name='project',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.CreateModel(
            name='ApiDef',
            fields=[
                ('http_schema', models.CharField(blank=True, choices=[('http', 'HTTP'), ('https', 'HTTPS')], max_length=5, null=True, verbose_name='HTTP模式')),
                ('http_method', models.CharField(blank=True, choices=[('get', 'GET'), ('post', 'POST'), ('put', 'PUT'), ('delete', 'DELETE'), ('head', 'HEAD'), ('options', 'OPTIONS')], max_length=8, null=True, verbose_name='HTTP方法')),
                ('uri', models.CharField(blank=True, max_length=256, null=True, verbose_name='URI')),
                ('auth_type', models.CharField(blank=True, choices=[('none', 'No Auth'), ('bearer', 'Bearer Token(JWT)'), ('basic', 'Basic Auth')], max_length=8, null=True, verbose_name='认证方法')),
                ('body_type', models.CharField(blank=True, choices=[('none', 'None'), ('form-urlencoded', 'x-www-form-urlencoded'), ('raw-json', 'JSON'), ('raw-xml', 'XML'), ('raw-text', 'Plain Text')], max_length=16, null=True, verbose_name='请求类型')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最近更新时间')),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('deploy_env', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='test_plt.deployenv', verbose_name='部署环境')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.project', verbose_name='测试项目')),
                ('db_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='数据库名')),
                ('db_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='DB密码')),
                ('db_username', models.CharField(blank=True, max_length=128, null=True, verbose_name='DB用户名')),
                ('protocol', models.CharField(choices=[('http', 'HTTP'), ('redis', 'Redis'), ('mysql', 'MySQL')], default='http', max_length=8, verbose_name='协议')),
            ],
            options={
                'verbose_name': '接口定义',
                'verbose_name_plural': '接口定义',
            },
        ),
        migrations.CreateModel(
            name='RequestBody',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('required', models.BooleanField(default=False, verbose_name='必须')),
                ('param_name', models.CharField(max_length=128, verbose_name='参数名称')),
                ('default_value', models.CharField(blank=True, max_length=128, null=True, verbose_name='缺省值')),
                ('default_raw', models.TextField(blank=True, null=True, verbose_name='缺省raw数据')),
                ('description', models.CharField(blank=True, max_length=40, null=True, verbose_name='名称')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_body', to='test_plt.apidef', verbose_name='接口定义')),
            ],
            options={
                'verbose_name': '请求体',
                'verbose_name_plural': '请求体',
            },
        ),
        migrations.CreateModel(
            name='QueryParam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('required', models.BooleanField(default=False, verbose_name='必须')),
                ('param_name', models.CharField(max_length=128, verbose_name='参数名称')),
                ('default_value', models.CharField(blank=True, max_length=128, null=True, verbose_name='缺省值')),
                ('description', models.CharField(blank=True, max_length=40, null=True, verbose_name='描述')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='query_params', to='test_plt.apidef', verbose_name='接口定义')),
            ],
            options={
                'verbose_name': '查询参数',
                'verbose_name_plural': '查询参数',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='测试项目名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='项目描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最近更新时间')),
                ('reorder', models.IntegerField(verbose_name='执行顺序')),
                ('abort_when_fail', models.BooleanField(default=True, verbose_name='失败时终止')),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.project', verbose_name='测试项目')),
            ],
            options={
                'verbose_name': '用例',
                'verbose_name_plural': '用例',
            },
        ),
        migrations.CreateModel(
            name='CaseApiDef',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reorder', models.IntegerField(verbose_name='执行顺序')),
                ('abort_when_fail', models.BooleanField(default=True, verbose_name='失败时终止')),
                ('auth_username', models.CharField(blank=True, max_length=128, null=True, verbose_name='认证用户名')),
                ('auth_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='认证密码')),
                ('bearer_token', models.TextField(blank=True, null=True, verbose_name='Bearer Token')),
                ('verify', models.BooleanField(default=True, verbose_name='是否校验')),
                ('status_code', models.IntegerField(blank=True, null=True, verbose_name='状态码校验')),
                ('response_time', models.IntegerField(blank=True, null=True, verbose_name='响应时间校验（s）')),
                ('header_verify', models.TextField(blank=True, null=True, verbose_name='HTTP响应头校验')),
                ('json_verify', models.TextField(blank=True, null=True, verbose_name='应答体JSON Schema校验')),
                ('regex_verify', models.TextField(blank=True, null=True, verbose_name='应答体正则表达式校验')),
                ('python_verify', models.TextField(blank=True, null=True, verbose_name='应答体Python脚本校验')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.apidef', verbose_name='接口')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.case', verbose_name='用例')),
            ],
            options={
                'verbose_name': '用例接口',
                'verbose_name_plural': '用例接口',
            },
        ),
        migrations.CreateModel(
            name='CaseSuite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='用例套件名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='用例套件描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('cases', models.ManyToManyField(related_name='case_belong_to', to='test_plt.case', verbose_name='用例')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.project', verbose_name='测试项目')),
            ],
            options={
                'verbose_name': '用例套件',
                'verbose_name_plural': '用例套件',
            },
        ),
        migrations.CreateModel(
            name='RequestHeader',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('required', models.BooleanField(default=False, verbose_name='必须')),
                ('header_name', models.CharField(max_length=128, validators=[test_plt.models.validate_ascii], verbose_name='参数名称')),
                ('default_value', models.CharField(blank=True, max_length=128, null=True, validators=[test_plt.models.validate_ascii], verbose_name='缺省值')),
                ('description', models.CharField(blank=True, max_length=40, null=True, verbose_name='描述')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_headers', to='test_plt.apidef', verbose_name='接口定义')),
            ],
            options={
                'verbose_name': '请求头',
                'verbose_name_plural': '请求头',
            },
        ),
        migrations.CreateModel(
            name='CaseSuiteRunLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('finish_at', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='耗时(ms)')),
                ('passed', models.BooleanField(default=False, verbose_name='执行成功')),
                ('error_msg', models.TextField(blank=True, null=True, verbose_name='错误消息')),
                ('case_suite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.casesuite', verbose_name='用例套件')),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '用例套件执行履历',
                'verbose_name_plural': '用例套件执行履历',
            },
        ),
        migrations.CreateModel(
            name='CaseRunLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('finish_at', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='耗时(ms)')),
                ('passed', models.BooleanField(default=False, verbose_name='执行成功')),
                ('error_msg', models.TextField(blank=True, null=True, verbose_name='错误消息')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.case', verbose_name='用例')),
                ('case_suite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='test_plt.casesuite', verbose_name='用例套件')),
                ('case_suite_run_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='test_plt.casesuiterunlog', verbose_name='用例套件执行履历')),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '用例执行履历',
                'verbose_name_plural': '用例执行履历',
            },
        ),
        migrations.CreateModel(
            name='CaseApiDefRequestHeader',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('header_name', models.CharField(max_length=128, verbose_name='头名称')),
                ('header_value', models.CharField(blank=True, max_length=128, null=True, verbose_name='值')),
                ('case_api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_plt.caseapidef', verbose_name='用例接口')),
            ],
            options={
                'verbose_name': '用例接口请求头',
                'verbose_name_plural': '用例接口请求头',
            },
        ),
        migrations.CreateModel(
            name='CaseApiDefRequestBody',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('param_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='参数名称')),
                ('param_value', models.CharField(blank=True, max_length=256, null=True, verbose_name='值')),
                ('raw_value', models.TextField(blank=True, null=True, verbose_name='RAW数据')),
                ('case_api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_plt.caseapidef', verbose_name='用例接口')),
            ],
            options={
                'verbose_name': '用例接口请求体',
                'verbose_name_plural': '用例接口请求体',
            },
        ),
        migrations.CreateModel(
            name='CaseApiDefQueryParam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('param_name', models.CharField(max_length=128, verbose_name='参数名称')),
                ('parm_value', models.CharField(blank=True, max_length=128, null=True, verbose_name='值')),
                ('case_api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_plt.caseapidef', verbose_name='用例接口')),
            ],
            options={
                'verbose_name': '用例接口查询参数',
                'verbose_name_plural': '用例接口查询参数',
            },
        ),
        migrations.CreateModel(
            name='ApiRunLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('query_params', models.TextField(blank=True, null=True, verbose_name='查询参数')),
                ('request_headers', models.TextField(blank=True, null=True, verbose_name='请求头')),
                ('request_body', models.TextField(blank=True, null=True, verbose_name='请求体')),
                ('response_headers', models.TextField(blank=True, null=True, verbose_name='应答头')),
                ('response_body', models.TextField(blank=True, null=True, verbose_name='应答体')),
                ('status_code', models.IntegerField(blank=True, null=True, verbose_name='状态码')),
                ('reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='状态码描述')),
                ('final_url', models.CharField(blank=True, max_length=1024, null=True, verbose_name='最终URL')),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('finish_at', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='耗时(ms)')),
                ('success', models.BooleanField(default=False, verbose_name='执行成功')),
                ('error_msg', models.TextField(blank=True, null=True, verbose_name='错误消息')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_plt.apidef')),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('auth_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='认证密码')),
                ('auth_username', models.CharField(blank=True, max_length=128, null=True, verbose_name='认证用户名')),
                ('bearer_token', models.TextField(blank=True, null=True, verbose_name='Bearer Token')),
                ('case_run_log', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='test_plt.caserunlog', verbose_name='用例执行履历')),
            ],
            options={
                'verbose_name': '接口执行履历',
                'verbose_name_plural': '接口执行履历',
            },
        ),
        migrations.AlterModelTable(
            name='apirunlog',
            table='test_plt_api_run_log',
        ),
        migrations.AlterModelTable(
            name='caseapidef',
            table='test_plt_case_apidef',
        ),
        migrations.AlterModelTable(
            name='caseapidefqueryparam',
            table='test_plt_case_apidef_query_param',
        ),
        migrations.AlterModelTable(
            name='caseapidefrequestbody',
            table='test_plt_case_apidef_request_body',
        ),
        migrations.AlterModelTable(
            name='caseapidefrequestheader',
            table='test_plt_case_apidef_request_header',
        ),
        migrations.AlterModelTable(
            name='caserunlog',
            table='test_plt_case_run_log',
        ),
        migrations.AlterModelTable(
            name='casesuiterunlog',
            table='test_plt_casesuite_run_log',
        ),
        migrations.AlterModelTable(
            name='projectmember',
            table='test_plt_project_member',
        ),
        migrations.AlterModelTable(
            name='queryparam',
            table='test_plt_query_param',
        ),
        migrations.AlterModelTable(
            name='requestbody',
            table='test_plt_request_body',
        ),
        migrations.AlterModelTable(
            name='requestheader',
            table='test_plt_request_header',
        ),
        migrations.AlterField(
            model_name='caseapidef',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='case_apidefs', to='test_plt.case', verbose_name='用例'),
        ),
        migrations.RenameField(
            model_name='caseapidefqueryparam',
            old_name='parm_value',
            new_name='param_value',
        ),
        migrations.AlterField(
            model_name='caseapidefqueryparam',
            name='case_api',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='query_params', to='test_plt.caseapidef', verbose_name='用例接口'),
        ),
        migrations.AlterField(
            model_name='caseapidefrequestbody',
            name='case_api',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_body', to='test_plt.caseapidef', verbose_name='用例接口'),
        ),
        migrations.AlterField(
            model_name='caseapidefrequestheader',
            name='case_api',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='http_headers', to='test_plt.caseapidef', verbose_name='用例接口'),
        ),
        migrations.AddField(
            model_name='apirunlog',
            name='redis_key',
            field=models.CharField(blank=True, max_length=128, null=True, verbose_name='Redis Key'),
        ),
        migrations.AddField(
            model_name='caseapidef',
            name='redis_key',
            field=models.CharField(blank=True, max_length=128, null=True, verbose_name='Redis Key'),
        ),
        migrations.AddField(
            model_name='caseapidef',
            name='post_proc',
            field=models.TextField(blank=True, null=True, verbose_name='后置处理'),
        ),
        migrations.AddField(
            model_name='caseapidef',
            name='pre_proc',
            field=models.TextField(blank=True, null=True, verbose_name='前置处理'),
        ),
        migrations.CreateModel(
            name='TestBatch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField(verbose_name='开始时间')),
                ('finish_at', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('obj_type', models.IntegerField(choices=[(1, '按照用例'), (2, '按照套件')], verbose_name='任务类型')),
                ('run_type', models.IntegerField(choices=[(1, '排队任务'), (2, '计划任务')], verbose_name='运行方式')),
                ('status', models.IntegerField(choices=[(1, '排队中'), (2, '执行完毕'), (3, '执行失败')], default=1, verbose_name='运行状态')),
                ('error_msg', models.TextField(blank=True, null=True, verbose_name='错误消息')),
                ('stat_api_plan', models.IntegerField(blank=True, null=True, verbose_name='接口数(计划)')),
                ('stat_api_run', models.IntegerField(blank=True, null=True, verbose_name='接口数(实际)')),
                ('stat_api_success', models.IntegerField(blank=True, null=True, verbose_name='接口数(成功)')),
                ('stat_api_success_rto', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='接口执行成功率(%)')),
                ('stat_case_plan', models.IntegerField(blank=True, null=True, verbose_name='用例数(计划)')),
                ('stat_case_run', models.IntegerField(blank=True, null=True, verbose_name='用例数(实际执行)')),
                ('stat_case_success', models.IntegerField(blank=True, null=True, verbose_name='用例数(实际执行成功)')),
                ('stat_case_success_rto', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='用例执行通过率(%)')),
                ('stat_suite_plan', models.IntegerField(blank=True, null=True, verbose_name='用例套件数(计划)')),
                ('stat_suite_run', models.IntegerField(blank=True, null=True, verbose_name='用例套件数(实际执行)')),
                ('stat_suite_success', models.IntegerField(blank=True, null=True, verbose_name='用例套件数(实际执行成功)')),
                ('stat_suite_success_rto', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='用例套件执行通过率(%)')),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('periodic_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_celery_beat.periodictask', verbose_name='计划任务')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='test_plt.project', verbose_name='测试项目')),
            ],
            options={
                'verbose_name': '测试批次(报告)',
                'verbose_name_plural': '测试批次(报告)',
            },
        ),
        migrations.CreateModel(
            name='TestBatchCaseSuite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_suite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_plt.casesuite', verbose_name='用例套件')),
                ('test_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suites', to='test_plt.testbatch', verbose_name='测试批次')),
            ],
            options={
                'verbose_name': '测试批次用例套件',
                'verbose_name_plural': '测试批次用例套件',
                'db_table': 'test_plt_testbatch_casesuite',
            },
        ),
        migrations.CreateModel(
            name='TestBatchCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_plt.case', verbose_name='用例')),
                ('test_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='test_plt.testbatch', verbose_name='测试批次')),
            ],
            options={
                'verbose_name': '测试批次用例',
                'verbose_name_plural': '测试批次用例',
                'db_table': 'test_plt_testbatch_case',
            },
        ),
        migrations.AddField(
            model_name='casesuiterunlog',
            name='test_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suite_run_logs', to='test_plt.testbatch', verbose_name='测试批次'),
        ),
        migrations.AddField(
            model_name='caserunlog',
            name='test_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_run_logs', to='test_plt.testbatch', verbose_name='测试批次'),
        ),
        migrations.AlterField(
            model_name='apirunlog',
            name='case_run_log',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_api_logs', to='test_plt.caserunlog', verbose_name='用例执行履历'),
        ),
        migrations.AlterField(
            model_name='caserunlog',
            name='case_suite_run_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_run_logs', to='test_plt.casesuiterunlog', verbose_name='用例套件执行履历'),
        ),
    ]
